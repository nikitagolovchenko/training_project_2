/*******************
 Box Sizing
 *******************/
@import url("https://fonts.googleapis.com/css?family=Merriweather:300&display=swap&subset=cyrillic-ext");
html {
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

/****************************
 Generic Margins and Paddings
 ****************************/
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
li,
p,
pre,
blockquote,
figure,
hr {
  margin: 0;
  padding: 0; }

/*******************
 Lists
 *******************/
ul {
  list-style: none; }

/*******************
 Forms and buttons
 *******************/
input,
textarea,
select,
button {
  color: inherit;
  font: inherit;
  letter-spacing: inherit; }

/* I usually expand input and textarea to full-width */
input[type="text"],
textarea {
  width: 100%; }

/* More friendly border */
input,
textarea,
button {
  border: 1px solid gray; }

/* Some defaults for one-liner buttons */
button {
  padding: 0.75em 1em;
  border-radius: 0;
  line-height: 1;
  background-color: transparent; }

button * {
  pointer-events: none; }

/***********************************
 Easy responsive for media elements
 ***********************************/
img,
svg,
iframe,
video,
object,
embed {
  display: block;
  max-width: 100%; }

/*******************
 Useful table styles
 *******************/
table {
  table-layout: fixed;
  width: 100%; }

/*******************
 The hidden attribute
 *******************/
[hidden] {
  display: none !important; }

/*******************
 Noscript
 *******************/
noscript {
  display: block;
  margin-bottom: 1em;
  margin-top: 1em; }

html, body {
  color: #424242;
  font-family: "Merriweather", serif;
  font-size: 14px;
  font-weight: 300;
  background-color: #f8f8f8;
  min-width: 320px; }
  @media (max-width: 480px) {
    html, body {
      font-size: 12px; } }

.wrapper {
  max-width: 100%;
  position: relative;
  overflow: hidden; }

.container {
  max-width: rem(1200px);
  margin: 0 auto;
  padding: 0 rem(15px); }

.main {
  padding-top: rem(200px); }

a {
  display: inline-block;
  vertical-align: top;
  text-decoration: none;
  color: inherit; }

.wrapper {
  padding: 0;
  height: 100vh;
  background-color: #828282; }

.picture {
  display: block;
  max-width: 100%;
  max-height: 100%;
  width: auto;
  height: auto;
  position: relative;
  z-index: 2; }
  .picture__wrap {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100vw;
    height: 100vh;
    padding: 15px;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center; }
    .picture__wrap:after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
      background: rgba(66, 66, 66, 0.9); }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
