/*
rem(32);
rem(32px);
*/
@import url("https://fonts.googleapis.com/css?family=Merriweather:300&display=swap&subset=cyrillic-ext");
.grid {
  margin: 0 -15px; }
  .grid__sizer, .grid__item {
    width: calc((100% / 3) - 30px);
    margin: 1.07143rem; }
    @media (max-width: 768px) {
      .grid__sizer, .grid__item {
        width: calc(50% - 30px); } }
    @media (max-width: 480px) {
      .grid__sizer, .grid__item {
        width: calc(100% - 30px); } }
  .grid__item--width2 {
    width: calc(50% - 30px); }

/*******************
 Box Sizing
 *******************/
html {
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

/****************************
 Generic Margins and Paddings
 ****************************/
body,
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
li,
p,
pre,
blockquote,
figure,
hr {
  margin: 0;
  padding: 0; }

/*******************
 Lists
 *******************/
ul {
  list-style: none; }

/*******************
 Forms and buttons
 *******************/
input,
textarea,
select,
button {
  color: inherit;
  font: inherit;
  letter-spacing: inherit; }

/* I usually expand input and textarea to full-width */
input[type="text"],
textarea {
  width: 100%; }

/* More friendly border */
input,
textarea,
button {
  border: 1px solid gray; }

/* Some defaults for one-liner buttons */
button {
  padding: 0.75em 1em;
  border-radius: 0;
  line-height: 1;
  background-color: transparent; }

button * {
  pointer-events: none; }

/***********************************
 Easy responsive for media elements
 ***********************************/
img,
svg,
iframe,
video,
object,
embed {
  display: block;
  max-width: 100%; }

/*******************
 Useful table styles
 *******************/
table {
  table-layout: fixed;
  width: 100%; }

/*******************
 The hidden attribute
 *******************/
[hidden] {
  display: none !important; }

/*******************
 Noscript
 *******************/
noscript {
  display: block;
  margin-bottom: 1em;
  margin-top: 1em; }

html, body {
  color: #424242;
  font-family: "Merriweather", serif;
  font-size: 14px;
  font-weight: 300;
  background-color: #f8f8f8;
  min-width: 320px; }
  @media (max-width: 480px) {
    html, body {
      font-size: 12px; } }

.wrapper {
  max-width: 100%;
  position: relative;
  overflow: hidden; }

.container {
  max-width: 85.71429rem;
  margin: 0 auto;
  padding: 0 1.07143rem; }

.main {
  padding-top: 14.28571rem; }

a {
  display: inline-block;
  vertical-align: top;
  text-decoration: none;
  color: inherit; }

@font-face {
  font-family: 'icomoon';
  src: url("../resources/fonts/icomoon.eot?5t0t8z");
  src: url("../resources/fonts/icomoon.eot?5t0t8z#iefix") format("embedded-opentype"), url("../resources/fonts/icomoon.ttf?5t0t8z") format("truetype"), url("../resources/fonts/icomoon.woff?5t0t8z") format("woff"), url("../resources/fonts/icomoon.svg?5t0t8z#icomoon") format("svg");
  font-weight: normal;
  font-style: normal; }

[class^="icon-"], [class*=" icon-"] {
  /* use !important to prevent issues with browser extensions that change fonts */
  font-family: 'icomoon' !important;
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  /* Better Font Rendering =========== */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }

.icon-top-arrow:before {
  content: "\e908"; }

.icon-search:before {
  content: "\e906"; }

.icon-dribbble:before {
  content: "\e900"; }

.icon-facebook:before {
  content: "\e901"; }

.icon-instagram:before {
  content: "\e902"; }

.icon-pinterest:before {
  content: "\e903"; }

.icon-tumblr:before {
  content: "\e904"; }

.icon-twitter:before {
  content: "\e905"; }

.icon-cancel:before {
  content: "\e907"; }

.nav__inner {
  display: flex; }

.nav__item {
  padding: 0 1.78571rem;
  display: block; }

.nav__link {
  padding: 0.71429rem 0;
  color: #fff;
  text-transform: uppercase;
  position: relative; }
  .nav__link:after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background-color: #fff;
    transform: scaleX(0);
    transition: transform 0.3s linear; }
  .nav__link:hover:after, .nav__link.active:after {
    transform: scaleX(1); }

.nav--without-bg .nav__link {
  color: #999;
  transition: color 0.3s linear; }
  .nav--without-bg .nav__link:after {
    background-color: #ff9311; }
  .nav--without-bg .nav__link:hover {
    color: #424242; }

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  z-index: 2000; }
  .header-top {
    position: relative;
    z-index: 100;
    border-bottom: 1px solid #cfcfcf;
    box-shadow: 0 0.14286rem 0.35714rem #cfcfcf;
    background-color: #f8f8f8; }
    .header-top__inner {
      display: flex;
      justify-content: space-between;
      align-items: center; }
      @media (max-width: 768px) {
        .header-top__inner {
          flex-direction: column; } }
    .header-top__nav {
      display: flex;
      justify-content: flex-end;
      align-items: center; }
      @media (max-width: 480px) {
        .header-top__nav {
          flex-direction: column-reverse; } }
    .header-top__text-line {
      color: #424242;
      font-weight: 400; }
      @media (max-width: 768px) {
        .header-top__text-line {
          padding-top: 0.71429rem; } }
      .header-top__text-line span {
        font-size: 0.857em;
        color: #999; }
  .header-bottom {
    padding-top: 2.5rem;
    padding-bottom: 2.5rem;
    transition: background-color 0.3s linear; }
    @media (max-width: 992px) {
      .header-bottom {
        padding: 1.42857rem 0; } }
    @media (max-width: 480px) {
      .header-bottom {
        padding: 0.71429rem 0; } }
    .header-bottom__inner {
      display: flex;
      justify-content: space-between;
      align-items: center; }
    @media (max-width: 992px) {
      .header-bottom__nav {
        display: none;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 50;
        width: 100%;
        height: 100vh;
        background-color: rgba(66, 66, 66, 0.7); } }
    .header-bottom__nav-inner {
      background-color: rgba(255, 147, 17, 0.8); }
      @media (max-width: 992px) {
        .header-bottom__nav-inner {
          flex-direction: column;
          width: 0;
          height: 100%;
          overflow-y: auto;
          margin-left: auto;
          padding-top: 9.14286rem; } }
      @media (max-width: 768px) {
        .header-bottom__nav-inner {
          padding-top: 11.14286rem; } }
      @media (max-width: 480px) {
        .header-bottom__nav-inner {
          padding-top: 12.5rem; } }
    @media (max-width: 992px) {
      .header-bottom__nav-item {
        padding: 0; } }
    .header-bottom__nav-link {
      display: block; }
      @media (max-width: 992px) {
        .header-bottom__nav-link {
          text-align: center;
          padding: 1.07143rem 1.42857rem; } }
      @media (max-width: 992px) {
        .header-bottom__nav-link:after {
          height: 1px;
          background-color: #e3e3e3;
          transform: scaleX(1); } }
      @media (max-width: 992px) {
        .header-bottom__nav-link:hover, .header-bottom__nav-link.active {
          background-color: rgba(66, 66, 66, 0.8); } }
    .header-bottom.background {
      background-color: rgba(66, 66, 66, 0.3); }

.socials {
  position: relative;
  z-index: 5;
  display: flex;
  padding: 1.07143rem 1.42857rem;
  border-left: 1px solid #cfcfcf;
  border-right: 1px solid #cfcfcf; }
  @media (max-width: 480px) {
    .socials {
      border: 0; } }
  .socials__item {
    padding: 0 0.57143rem;
    border-left: 1px solid #e3e3e3; }
    .socials__item:first-child {
      border-left: none; }
  .socials__link {
    color: #999;
    transition: color 0.3s linear; }
    .socials__link:hover {
      color: #ff9311; }
  .socials--relative {
    position: relative;
    z-index: 2; }
  .socials--without-border {
    border: 0; }

.search {
  position: relative;
  z-index: 1;
  left: 17.21429rem; }
  @media (max-width: 480px) {
    .search {
      padding-bottom: 0.71429rem; } }
  .search__form {
    margin-right: 2.14286rem;
    margin-left: 0.71429rem;
    display: flex;
    align-items: center; }
  .search__field {
    border: 0;
    outline: none;
    padding: 0.14286rem;
    margin: 0 1.07143rem;
    background-color: #f8f8f8;
    border-bottom: 1px solid #999; }
    @media (min-width: 768px) {
      .search__field {
        opacity: 0;
        visibility: hidden;
        transition: opacity 0.3s linear, visibility 0.3s linear; } }
    .search__field:focus {
      border-bottom: 1px solid #ff9311; }
  .search__icon {
    color: #999;
    padding: 0;
    border: 0;
    outline: none;
    cursor: pointer;
    transition: color 0.3s linear; }
    .search__icon:hover, .search__icon:focus {
      color: #ff9311; }
  @media (min-width: 768px) {
    .search__close {
      opacity: 0;
      visibility: hidden;
      transition: opacity 0.3s linear, visibility 0.3s linear; } }
  .search.active .search__field,
  .search.active .search__close {
    opacity: 1;
    visibility: visible; }

.contacts__wrap {
  display: flex;
  justify-content: space-between;
  flex-wrap: nowrap; }
  @media (max-width: 992px) {
    .contacts__wrap {
      flex-direction: column;
      align-items: center; } }

.contacts__photo {
  max-width: 29.28571rem; }
  @media (max-width: 768px) {
    .contacts__photo {
      max-width: 60%; } }
  @media (max-width: 480px) {
    .contacts__photo {
      max-width: 70%; } }

.contacts__content {
  padding: 2.5rem 1.78571rem;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: flex-end;
  background-color: #f5f5f5; }
  @media (max-width: 768px) {
    .contacts__content {
      padding: 1.78571rem;
      flex-direction: column;
      align-items: center; } }

.contacts__inner {
  display: flex;
  margin-bottom: 1.07143rem; }
  .contacts__inner:last-child {
    margin-bottom: 0; }

.contacts__data {
  margin: 0; }
  @media (max-width: 768px) {
    .contacts__data {
      margin-bottom: 1.78571rem; } }

.contacts__title {
  color: #999;
  font-style: normal; }

.contacts__text {
  color: #424242;
  margin-left: 1.07143rem; }

.button {
  padding: 1rem 2.5rem;
  color: #fff;
  background-color: #ff9311;
  border: 0;
  border-radius: 2px;
  text-transform: uppercase;
  transition: cursor 0.3s linear, background-color 0.3s linear, color 0.3s linear; }
  .button:hover {
    cursor: pointer;
    background-color: #424242;
    color: #ff9311; }

.works {
  padding: 6.42857rem 0 2.85714rem; }
  @media (max-width: 768px) {
    .works {
      padding: 1.78571rem 0; } }
  .works__filter-inner {
    display: flex;
    justify-content: space-between; }
    @media (max-width: 550px) {
      .works__filter-inner {
        flex-direction: column;
        align-items: center; } }
  @media (max-width: 768px) {
    .works__filter-item {
      padding: 0; } }
  .works__button {
    display: block;
    margin: 0 auto; }
  .works__grid {
    margin-bottom: 1.42857rem; }
  .works__item {
    overflow: hidden; }
  .works__link {
    position: relative;
    z-index: 1; }
    .works__link:before {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      z-index: 3;
      width: 100%;
      text-align: center;
      font-size: 3em;
      color: rgba(255, 147, 17, 0.6);
      opacity: 0;
      transition: opacity 0.3s linear; }
    .works__link:after {
      content: "";
      position: absolute;
      z-index: 2;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transition: background-color 0.3s linear; }
    .works__link:hover:before {
      opacity: 1; }
    .works__link:hover:after {
      background-color: rgba(66, 66, 66, 0.4); }
    .works__link img {
      transition: transform 0.3s linear; }
    .works__link:hover img {
      transform: scale(1.1); }

.footer {
  padding: 2.85714rem 0 6.42857rem; }
  .footer__inner {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; }
  @media (max-width: 480px) {
    .footer__text {
      text-align: center; } }
  .footer__text a {
    color: #ff9311;
    border-bottom: 1px solid transparent;
    transition: border-bottom 0.3s linear; }
    .footer__text a:hover {
      border-bottom: 1px solid #ff9311; }

.burger {
  display: none;
  background-color: #ff9311;
  padding: 1.28571rem 1rem;
  border: 0;
  border-radius: 2px;
  cursor: pointer;
  position: relative;
  z-index: 100;
  transition: background-color 0.5s linear; }
  @media (max-width: 992px) {
    .burger {
      display: block; } }
  .burger__elements {
    display: block;
    width: 2.14286rem;
    height: 3px;
    background-color: #fff;
    position: relative;
    z-index: 50;
    transition: background-color 0.3s linear; }
    .burger__elements:before, .burger__elements:after {
      content: "";
      position: absolute;
      left: 0;
      z-index: 100;
      width: 100%;
      height: 100%;
      background-color: #fff;
      transition: all 0.3s linear; }
    .burger__elements:before {
      top: -8px; }
    .burger__elements:after {
      bottom: -8px; }
  .burger.active {
    background-color: transparent; }
    .burger.active .burger__elements {
      background-color: transparent; }
      .burger.active .burger__elements:before {
        transform: rotate(135deg);
        top: 0; }
      .burger.active .burger__elements:after {
        transform: rotate(-135deg);
        bottom: 0; }

.scroll-top {
  position: fixed;
  z-index: 100;
  bottom: 1.07143rem;
  right: 1.07143rem;
  width: 3.57143rem;
  height: 3.57143rem;
  border-radius: 50%;
  background-color: rgba(255, 147, 17, 0.8);
  cursor: pointer;
  display: none;
  border: 0; }
  .scroll-top:hover .scroll-top__item {
    color: #424242; }
  .scroll-top__inner {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center; }
  .scroll-top__item {
    font-size: 2rem;
    color: #fff;
    transition: color 0.3s linear; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
